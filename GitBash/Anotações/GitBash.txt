				Curso Git Bash.
_______________________________________________________________________________
|			Outros -						|
|										|
| SHA - Security Hash Algorithym - É um conjunto de3 funções hash criptográ-	|
| ficas, projetadas pela NSA (Agência de Segurança Nacional dos EUA). A encri-	|
| ptação, gera um conjunto de caracteres identificador de 40 digitos.		|
|_______________________________________________________________________________|


Windows -cmd

*dir - Lista todas as pastas, dentro do diretório selecionado.

*cd (change directory) - Faz com que o programa mude de diretório.
Exemplo:

C:\Users\arrur> cd
C: cd \Windows
C:\Windows>

*cd .. - Retorna ao diretório anterior.

*cls - limpa todo o registro anteriormente "escrito".

*(Make Directory) mkdir - Cria um diretório (pasta) novo.

*echo ___ - cria um texto que será copiado pelo programa, fazendo um "eco".

*echo ___ > ____.___ - Cria um arquivo em que a mensagem escrita no primeiro sublinhado,
é copiada para dentro do arquivo do 2º sublinhado.É necessário também digitar a extensão do
arquivo.

*del - deleta todos os arquivos dentro de uma determinada pasta.

*(Remove Directory) rmdir ____ /S /Q - Deleta o diretório digitado dentro do sublinhado.

*start *nome da aplicação* - Abre um determinado aplicativo.
__________________

Linux (Git Bash)
__________________

*ls - Lista todas as pastas, dentro do diretório selecionado.

*(change directory) cd / - Faz com que o programa mude de diretório.

*cd .. - Retorna ao diretório anterior

*touch + nome do arquivo + extensão - Cria um determinado arquivo com uma
determinada extensão.

*clear - limpa todo o regostro anteriormente "escrito".É possível utilizar
também, o comando "CTRL + L", pois será realizada a mesma função.

*(Make Directory) mkdir _____ - Cria um diretório (pasta) novo.

*(remove)git rm -rf ______ - Deleta a pasta escrita dentro do sublinhado, além de deletar
todas as pastas dentro da mesma.

*openssl sha1 _____.____ - Encripta o arquivo na linguagem "sha1". O processo deve ser repetido todas
as vezes em que o arquivo sofrer alguma alteração ou atualização.

*ls -a - Mostra pastas ocultas dentro do Git
____________________________________________________
|INSERIR REPOSITÓRIOS EM UMA PASTA/DIRETÓRIO PELO GIT|_________________________
|                                                                              |
|Passo 1 - *git init - inicia um repositório git                               |
|Passo 2 - digitar "git add "nome do arquivo e, caso localizado em outro diretó|
|rio, digitar o nome do arquivo, e o nome do diretório em seguida." no terminal|
|Passo 3 - git commit -m "*mensagem*" - commita todos os arquivoss dentro do   |
|determinado repositório.                                                      |
|                                                                              |
| Caso um arquivo seja movido para outra pasta, digite:                        |
|									       |
|*git add + nome do arquivo + nome do diretório atual do arquivo               |
|*git commit -m + msg							       |
|*git push origin master						       |
|______________________________________________________________________________|

*git remote rm origin -*Para remover o "origin master" do repositório atualmente registrado no seu
diretório local, deve-se utilizar este comando.

*git push -u origin master - *Executa a mesma função de "git push", porém com um adicional.
Também são igualadas as versões de repositório local e remoto.

*git branch - Mostrará qual(is) branch(es) temos criada(s) em nosso diretório.

*git checkout + nome da branch - É responsável por trocar a branch.

*git branch -D + nome da branch - Deleta uma determinada branch.

*git branch + nome da branch - Cria uma determinada branch.

*git checkout -b + nome da branch - Cria uma determinada branch, e, automáticamente já leva o usuário para
dentro da mesma.

*git push origin + nome da branch - Envia uma determinada branch para o repositório remoto.

*git merge + nome da branch - Realiza a "fusão" entre todas as branches. Ou seja, copia todos os arquivos,
para dentro de todas as branches criadas.

*git status - Mostra o status do arquivo.

*git add * - "Atualiza" o commit, caso haja alteração em algum arquivo.

*git remote add origin *link de origem* - Adiciona um repositório git remoto, de uma determinada origem.

*git remote -v - Lista todos os repositórios cadastrados neste diretóro.

*git push origin master - "Empurra" os dados, arquivos e etc. do diretório do computador, para o diretório
citado em "origin" (para entender, leia o tutorial para inserir repositórios pelo git).

*mv *nome do arquivo* ./*mome do diretório*/ - Move aum arquivo para um determinado diretório.

*echo >___ - cria um arquivo com o nome que deve ser inserido na parte sublinhada.

*git config --list - Mostra a atual lista de configurações dentro do git bash.

*git config --global --unset *categoria* - Deleta a configuração da categoria citada

*git config --global *categoria* - Altera o nome da categoria listada.
 IMPORTANTE: A CONFIGURAÇÃO DEVE SER DELETADA PRIMEIRO, PARA DEPOIS SER RENOMEADA.

 _______________________
 |EM CASO DE CONFLITOS:|_____________________________________________________________________________________________												  
|														   |
|Conflitos entre dados, acontecerão principalmente durante o processo "git push", o que pode acabar fazendo        |
|com que nem todos os arquivos atualizados, sejam enviados. Caso isso aconteça:                                    |
|														   |
|Passo 1 - *git pull origin master - Puxa todo o conteúdo do repositório git, além de explicar o motivo do confli- |
|to entre os arquivos.												   |
|Passo 2 - *													   |
|__________________________________________________________________________________________________________________|
___________________

Typora e Markdown
____________________

# - Equivale aos "h's". ou seja, 

uma hashtag = h1
duas = h2

_ *palavra*_ - deixa a sentença, frase, texto etc em itálico.

**palavra** - deixa a sentença, frase, texto etc em negrito.

- *cria uma lista de itens que sejam digitados de pois do "menos".