				GitBash

 A grosso modo, o GitBash é um console do sistema Linux que está disponível em outros computadores.
 Essa é umadescrição bem superficial, já que o GitBash faz várias e várias outraas coisas... Como
mostramos nos comandos abaixo.
===============================================================================================
###############################################################################################	

	 _______________________________________________________
	|							|
	|	Criação de arquivos e pastas/navegação		|_______________________________________
 _______|												|
|													|
| Assim como o terminal do Windows, o GitBash, que é um terminal Linux, também consegue fazer alterações|
|em seu computador... Porém, com comandos diferentes. Se você leu as anotações sobre o CMD do Windows, 	|
|vai se dar conta de que alguns comandos são iguais, e de fato eles são. Mas alguns são diferentes.	|
|													|
|-------------------------------------------------------------------------------------------------------|
|ls - Lista todas as pastas, dentro do diretório selecionado.						|
|													|
|cd - Faz com que o terminal caminhe para um determinado diretório, que deve ter seu nome escrito na	|
| frente do comando.											|
|													|
|cd .. - Retorna ao diretório anterior.									|
|													|
|touch + nome do arquivo + extensão - Cria um determinado arquivo com uma determinada extensão. Exemplo:|
|													|
| touch teste.txt											|
|													|
| O arquivo de texto "teste" será criado na pasta que você selecionou.					|
|													|
|clear - Limpa todas as informações registradas na tela. Também é possível utilizar o comando		|
| "CTRL + L", pois será realizada a mesma função.							|
|													|
|mkdir "nome da pasta" - Cria uma nova pasta com um determinado nome (inserido na frente do comando).	|
|													|
|git rm -rf "nome da pasta" - Deleta uma determinada pasta, junto de tudo que esteja dentro dela.	|
| O nome da pasta deve ser inserido na frente do comando.						|
|													|
|openssl sha1 "nome"."extensão" - Encripta o arquivo na linguagem "sha1".				|
|O processo deve ser repetido todas as vezes em que o arquivo sofrer alguma alteração ou atualização.	|
| O nome do arquivo deve ser inserido na frente do comando						|
|													|
|ls -a - Mostra pastas ocultas do sistema que não aparecem normalmente com o comando "ls".		|
|													|
|-------------------------------------------------------------------------------------------------------|
 		 _______________________________
		|				|
		|	GIT COMMIT E PUSH:	|
________________|-------------------------------|_______________________________________________________________________
|															|
| Um commit é uma forma de registrar todas as mudanças que foram feitas em arquivos/pastas. Isso inclui nomes, dados de |
|arquivos, literalmente QUALQUER mudança. Por isso que toda e qualquer mudança deve ser registrada no Git por meio de	|
|um commit.														|
|															|
|			PASSO 1:											|
|															|
| Primeiramente é necessário iniciar um repositório git no repositório local, que no caso, é a pasta que vamos 		|
|registrar. 														|
|															|
|Abra o git, caminhe até a pasta, e digite 'git init'. Uma pasta oculta no sistema chamada ".git" será			|
| criada, sinalizando que  os dados dali serão registrados.								|
|															|
|			PASSO 2:											|
|															|
| Agora, precisamos adicionar os arquivos da pasta ao commit. 								|
|Digite então 'git add .' ou 'git add *'. Não há nenhuma diferença entre os dois.					|
|															|
|			PASSO 3:											|
|															|
|Agora, iremos "commitar" os arquivos. Digite 'git commit -m "_______" e digite uma mensagem dentro do			|
|espaço sublinhado.													|
|															|
|			PASSO 4:											|
|															|
| Agora, caso você já tenha um repositóro externo cadastrado, apenas digite 'git push origin master'.			|
|															|
| Um repositório externo, é um lugar que o GitBash madará seus arquivos para que fiquem salvos, quase como uma nuvem.	|
| Em programação, chamamos isso de versionamento de código, pois cria outras versões dos mesmos arquivos.		|
|															|
| Há diferentes sites que fazem o versionamento Git, porém, alguns são pagos. O mais usado e mais conhecido, é o GitHub,|
| que oferece espaço gratuito para a criação de repositórios. Apesar disso, há um limite de armazenamento de arquivos no|
| repositório.														|
| 															|
| Caso não tenha um repositório externo cadastrado, siga os passos abaixo.						|
|#######################################################################################################################|
|		 _______________________________________								|
|		|					|								|
|		|	CADASTRANDO REPOSITÓRIOS:	|								|
|		|_______________________________________|								|
|															|
|1. Insira o código git remote add origin, e na frente do comando, insira o link do repositório externo.		|
|															|
|2 - Caso você queira visualizar os repositórios externos cadastrados na pasta, digite git remote -v.			|
|															|
|3 - Para remover um repositório externo, digite git remote rm origin. Caso queira cadastrar outro, repita os passos.	|
|
| Para conferir se todos os arquivos foram commitados, insira o comando "git status". Ele exibirá quais arquivos faltam |
|ser adicionados, ou SE faltam arquivos a serem adicionados.
|_______________________________________________________________________________________________________________________|

			 _______________________________
			|				|
			|	Os tipos de "push"	|
 _______________________|				|_______________________________________________________________
|															|
| Git Push é um comando que manda as informações de um commit para o repositório externo, assim, "empurrando" as infor- |
|mações.														|
|															|
| Há diversos outros tipos de comandos de Git Push, e iremos listar alguns deles:					|
|															|
|git push -u origin master - *Executa a mesma função de "git push", porém, são iguala as versões de repositório local	|
| e remoto.														|
|															|
|mv "nome do arquivo" ./"nome do diretório"/ - Move um arquivo para um determinado diretório. O nome do arquivo deve ser|
| adicionado no lugar das aspas, assim como o nome do diretório.							|
|															|
|echo >___.___ - cria um arquivo com o nome que e extensão que devem ser inseridos nas partes sublinhadas.		|
|															|
|-----------------------------------------------------------------------------------------------------------------------|

			 _______________________________
			|				|
			|	Configurando o Git	|
 _______________________|				|_______________________________________________________________
|															|
| Também é necessário configurar algumas preferências do sistema do terminal. Isso não é algo tão urgente, mas pode vir	|
| a ser útil.														|
|															|
|git config --list - Mostra a atual lista de configurações dentro do git bash.						|
|															|
|git config --global --unset " nome da categoria" - Deleta a configuração da categoria citada				|
|															|
|git config --global *categoria* - Altera o nome da categoria listada.							|
| IMPORTANTE: A CONFIGURAÇÃO DEVE SER DELETADA PRIMEIRO, PARA DEPOIS SER RENOMEADA.					|
|															|
|-----------------------------------------------------------------------------------------------------------------------|