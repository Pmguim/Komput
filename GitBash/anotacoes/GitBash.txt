				Curso Git Bash.
 _______________________________________________________________________________
|			Outros -						|
|										|
| SHA - Security Hash Algorithym - É um conjunto de 3 funções hash criptográ-	|
| ficas, projetadas pela NSA (Agência de Segurança Nacional dos EUA). A encri-	|
| ptação, gera um conjunto de caracteres identificador de 40 digitos.		|
|_______________________________________________________________________________|
				
				 _______________________
				|			|
				|	Windows - cmd	|
				|_______________________|

*dir - Lista todas as pastas, dentro do diretório selecionado.

*cd (change directory) - Faz com que o programa mude de diretório.
Exemplo:

C:\Users\arrur> cd
C: cd \Windows
C:\Windows>

*cd .. - Retorna ao diretório anterior.

*cls - limpa todo o registro anteriormente "escrito".

*(Make Directory) mkdir - Cria um diretório (pasta) novo.

*echo ___ - cria um texto que será copiado pelo programa, fazendo um "eco".

*echo ___ > ____.___ - Cria um arquivo em que a mensagem escrita no primeiro sublinhado,
é copiada para dentro do arquivo do 2º sublinhado.É necessário também digitar a extensão do
arquivo.

*del - deleta todos os arquivos dentro de uma determinada pasta.

*(Remove Directory) rmdir ____ /S /Q - Deleta o diretório digitado dentro do sublinhado.

*start *nome da aplicação* - Abre um determinado aplicativo.

===============================================================================================
###############################################################################################	
	 _______________________________
	|				|
	|	Linux (Git Bash)	|
	|_______________________________|

*ls - Lista todas as pastas, dentro do diretório selecionado.

*(change directory) cd / - Faz com que o programa mude de diretório.

*cd .. - Retorna ao diretório anterior

*touch + nome do arquivo + extensão - Cria um determinado arquivo com uma
determinada extensão.

*clear - limpa todo o regostro anteriormente "escrito".É possível utilizar
também, o comando "CTRL + L", pois será realizada a mesma função.

*(Make Directory) mkdir _____ - Cria um diretório (pasta) novo.

*(remove)git rm -rf ______ - Deleta a pasta escrita dentro do sublinhado, além de deletar
todas as pastas dentro da mesma.

*openssl sha1 _____.____ - Encripta o arquivo na linguagem "sha1". O processo deve ser repetido todas
as vezes em que o arquivo sofrer alguma alteração ou atualização.

*ls -a - Mostra pastas ocultas dentro do Git
 				____________________
				|GIT COMMIT E PUSH:|
________________________________|------------------|_________________________________________________________
|1º - Primeiramente é necessário iniciar um repositório git no repositório local, que no caso, é a pasta que|___
|vamos comitar. Abra o git, caminhe até a pasta, e digite 'git init'.						|
|														|
|2º - Agora, precisamos adicionar os arquivos da pasta ao commit. Digite então 'git add .' ou 'git add *',	|
|lembrando que não há nenhuma diferença entre os dois.								|
|														|
|3º - Agora, iremos commitar os arquivos. Digite 'git commit -m "_______" e digite uma mensagem dentro do	|
|espaço sublinhado.												|
|														|
|4º - Agora, caso você já tenha um repositóro externo cadastrado, apenas digite 'git push origin master'.	|
| 														|
| Caso contrário, siga estes passos:										|
|########################___________________________###################################################		|
|			|CADASTRANDO REPOSITÓRIOS:|								|
|														|
|A - Digite git remote add origin https:\\linkdeexemplo e em seguida, pressione enter.				|
|														|
|B - Caso você queira visualizar os repositórios externos salvos na pasta, digite git remote -v.		|
|														|
|C - Para remover um repositório externo, digite git remote rm origin.						|
|_______________________________________________________________________________________________________________|

*git push -u origin master - *Executa a mesma função de "git push", porém com um adicional.
Também são igualadas as versões de repositório local e remoto.

*git branch - Mostrará qual(is) branch(es) temos criada(s) em nosso diretório.

*git checkout + nome da branch - É responsável por trocar a branch.

*git branch -D + nome da branch - Deleta uma determinada branch.

*git branch + nome da branch - Cria uma determinada branch.

*git checkout -b + nome da branch - Cria uma determinada branch, e, automáticamente já leva o usuário para
dentro da mesma.

*git merge + nome da branch - Realiza a "fusão" entre todas as branches. Ou seja, copia todos os arquivos,
para dentro de todas as branches criadas.

*git status - Mostra o status do arquivo.

*mv *nome do arquivo* ./*mome do diretório*/ - Move aum arquivo para um determinado diretório.

*echo >___ - cria um arquivo com o nome que deve ser inserido na parte sublinhada.

*git config --list - Mostra a atual lista de configurações dentro do git bash.

*git config --global --unset *categoria* - Deleta a configuração da categoria citada

*git config --global *categoria* - Altera o nome da categoria listada.
 IMPORTANTE: A CONFIGURAÇÃO DEVE SER DELETADA PRIMEIRO, PARA DEPOIS SER RENOMEADA.

___________________

Typora e Markdown
____________________

# - Equivale aos "h's" de HTML. Ou seja, 

Uma hash = h1
duas = h2

_ *palavra*_ - Transforma a sentença, frase, texto etc em itálico.

**palavra** - Transforma a sentença, frase, texto etc em negrito.

- *cria uma lista de itens que sejam digitados depois do "menos".